### Functions #################################################################
#
# Can be sourced directly with:
# $ source <(curl -sSL https://raw.githubusercontent.com/vladgh/dotfiles/master/.functions) || true
# Note: if script has 'set -e' in order to exit on errors, then '|| true'
# should be appended
#
###############################################################################

## OS detection
is_root()   { [[ $EUID == 0 ]] ;}
is_cmd()    { command -v "$@" > /dev/null 2>&1 ;}
is_osx()    { [[ $(uname) == Darwin ]] ;}
is_linux()  { [[ $(uname) == Linux ]] ;}
is_ubuntu() { is_cmd lsb_release && [[ "$(lsb_release -si)" =~ Ubuntu ]] ;}

## Logging stuff.
is_color()  { [[ $TERM =~ xterm ]] ;}
is_silent() { [[ $silent == true ]] ;}
e_header() {
  is_silent || { is_color && echo -e "\n\033[1m$@\033[0m" || echo -e "\n$@" ;}
}
e_ok() {
  is_silent || \
    { is_color && echo -e "  \033[1;32m✔\033[0m  $@" || echo "  ✔  $@" ;}
}
e_error() {
  is_silent || \
    { is_color && echo -e "  \033[1;31m✖\033[0m  $@" || echo "  ✖  $@" ;}
}
e_warn() {
  is_silent || \
    { is_color && echo -e "  \033[1;33m  $@\033[0m" || echo "    $@" ;}
}
e_arrow() {
  is_silent || \
    { is_color && echo -e "  \033[0;34m➜\033[0m  $@" || echo "  ➜  $@" ;}
}
e_footer() {
  is_silent || \
    { is_color && echo -e "\n\033[1m$@\033[0m\n" || echo -e "\n$@\n" ;}
}

# $1 => error message, $2 => exit code
e_abort() { e_error $1; exit $2; }

# Look for '.functions.d' in the current directory and source all files from it
functions="$(ls $( cd "$( dirname "${BASH_SOURCE[0]}" )/.functions.d" 2>/dev/null && pwd -P )/*.sh 2>/dev/null)"
for func in $functions; do [ -s $func ] && . $func; done

# vim: ft=sh
